Binary Search:

def binary_search(n,l,r,key)
   while(l<=r):
      mid = (l+r)/2
      if a[mid] == key :
         return mid;
      elif a[mid] > key :
         r = mid -1 
      else:
         l = mid + 1 
     
   return -1


Selection sort:

def: Selection Sort: Select the minimum element in unsorted array and swap it with element at beginning.


Bubble sort:

def: Bubble sort:  Swap the adjacent elements if they are in wrong order.

def bubble_sort(a,n):
   for(i=0; i<n-1;i++)
      for (j=i+1;j<n;j++)
         if a[i]>a[j]:
            swap(a[i],a[j])


Insertion sort:

def: Insertion sort: Insert an element from unsorted array to its correct position in sorted array.

procedure insertionSort(A: list of sortable items)
   n = length(A)
   for i = 1 to n - 1 do
       j = i
       while j > 0 and A[j-1] > A[j] do
           swap(A[j], A[j-1])
           j = j - 1
       end while
   end for
end procedure



Notes:


 pre requisite: Sub array -> continuous part of an array. No of sub arrays for array of size n is nc2 + n
                Sub sequence -> derived from an array by selecting zero or more elements without changing the order of remaining elements.
                No of elements = 2 ^ n.